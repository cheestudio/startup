
/* Grid & Padding
========================================================= */
$col-width  : 80;
$col-gutter : 20;
$gap        : 20;
$padding    : 15;


/* Containers
========================================================= */
@mixin content-container( $width: 1440 + ($padding * 2) ) {
	max-width: $width+px;
	margin: 0 auto;
	padding: 0 #{$padding}px;
}
.container {
	@include content-container;
}


/* Fonts
========================================================= */
@mixin font( $style:'body' ) {
	@if ( $style == 'body' ) {
		// font-family here
	}
	@elseif ( $style == 'heading' ) {
		// font-family here
	}
}


/* Color VARs
========================================================= */



/* EM to PX
========================================================= */
$browser-context: 16; // Default
@function em($pixels, $context: $browser-context) {
	@return #{$pixels/$context}em;
}

/* BG Image
========================================================= */
@mixin bg( $sizing:cover, $position:center, $repeat:no-repeat ) {
	background: {
		position : $position;
		repeat   : $repeat;
		size     : $sizing;
	}
}

/* Global Row Padding
========================================================= */
@mixin row-padding (
	$top-large:100,         $bottom-large:100,
	$top-medium:50,         $bottom-medium:50,
	$top-small:$top-medium, $bottom-small:$bottom-medium,
	$top-x-small:25,        $bottom-x-small:25) {

	@include for-size(tablet, up) {
		padding-top:    $top-large + px;
		padding-bottom: $bottom-large + px;
	}
	@include between-sizes(tablet-sm, tablet) {
		padding-top:    $top-medium + px;
		padding-bottom: $bottom-medium + px;
	}
	@include for-size(tablet-sm) {
		padding-top:    $top-small + px;
		padding-bottom: $bottom-small + px;
	}
	@include for-size(phone) {
		padding-top:    $top-x-small + px;
		padding-bottom: $bottom-x-small + px;
	}
}

@mixin section-padding {
	padding-top: 50px;
	padding-bottom: 50px;
	@include for-size(tablet-sm) {
		padding-top: 25px;
		padding-bottom: 25px;
	}
}

/* Global Transition ( property, duration, easing )
========================================================= */
@mixin trans( $property:all, $duration:600, $easing:cubic-bezier(.23,1,.32,1) ) {
	transition: $property $duration+ms $easing;
}

/* Font Awesome 5 ( needs content specified )
========================================================= */
@mixin fa( $type:free, $weight:900 ) {
	display: inline-block;
	font-style: normal;
	font-variant: normal;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	@if ( $type == 'free' ) {
		font-family: "Font Awesome 5 Free";
		font-weight: $weight;
	}
	@elseif ( $type == 'brands' ) {
		font-family: "Font Awesome 5 Brands";
	}
}

/* Button ( color, background, border )
========================================================= */
%btn {
	@include trans;
	border: 2px solid transparent;
	cursor: pointer;
	display: inline-block;
	padding: 10px 40px;
	text-align: center;
	user-select: none;
	vertical-align: baseline;
	font-size: em(18);
	line-height: 1.2;
	-webkit-appearance: none;
}
@mixin button( $color:black, $bg:white, $border:black ) {
	@extend %btn;
	background-color: $bg;
	color: $color;
	border-color: $border;
	&:hover, &:focus, &:active {
		color: $bg;
		background-color: $color;
	}
}

/* Additional Helper Mixins
========================================================= */
@mixin list-reset {
	margin: 0;
	padding: 0;
	list-style: none;
}

@mixin margin-center {
	margin-left: auto;
	margin-right: auto;
}

@mixin no-margin-last {
	&:last-of-type {
		margin-bottom: 0;
	}
}

@mixin padding-remove {
	margin-left: -#{$padding}px;
	margin-right: -#{$padding}px;
}

@mixin center( $dir:vert, $pos:relative ) {
	position: $pos;
	@if $dir == 'vert' {
		top: 50%;
		transform: translateY(-50%);
	}
	@elseif $dir == 'horiz' {
		left: 50%;
		transform: translateX(-50%);
	}
}

@mixin display( $state:show ) {
	@if $state == 'show' {
		opacity: 1;
		visibility: visible;
	}
	@elseif $state == 'hide' {
		opacity: 0;
		visibility: hidden;
	}
}
