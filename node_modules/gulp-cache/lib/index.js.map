{"version":3,"file":"index.js","sources":["../src/task-proxy.js","../src/index.js"],"sourcesContent":["import EventEmitter from 'events';\nimport crypto from 'crypto';\nimport File from 'vinyl';\nimport pick from 'object.pick';\n\nconst whitespaces = 2,\n\teventListenersCount = 3;\n\nfunction makeHash(key) {\n\treturn crypto.createHash('md5').update(key).digest('hex');\n}\n\nexport default class TaskProxy {\n\n\tconstructor(task, inputOptions) {\n\n\t\tthis.task = task;\n\t\tthis.options = inputOptions;\n\t\tthis._cacheQueue = new Map();\n\t\tthis._removeListeners = [];\n\n\t\tif (task) {\n\t\t\tthis.patchTask();\n\t\t}\n\t}\n\n\tpatchTask() {\n\n\t\tconst { task } = this,\n\t\t\t{ _transform } = task;\n\n\t\ttask._transform = (chunk, encoding, next) => {\n\n\t\t\tReflect.apply(_transform, task, [chunk, encoding, (...args) => {\n\t\t\t\tnext(...args); // eslint-disable-line\n\t\t\t\ttask.emit('gulp-cache:transformed');\n\t\t\t}]);\n\t\t};\n\t}\n\n\tprocessFile(inputFile, signals = new EventEmitter()) {\n\n\t\tprocess.nextTick(() => {\n\t\t\tthis._processFileAsync(inputFile, signals);\n\t\t});\n\n\t\treturn signals;\n\t}\n\n\tasync _processFileAsync(inputFile, signals = new EventEmitter()) {\n\n\t\tconst cached = await this._checkForCachedValue(inputFile);\n\n\t\t// If we found a cached value\n\t\t// The path of the cache key should also be identical to the original one when the file path changed inside the task\n\t\tconst cachedValue = cached.value,\n\t\t\tcachedValueIsEmpty = !Array.isArray(cachedValue) || !cachedValue.length;\n\n\t\tconst cachedValuesWithNormalPaths = cachedValueIsEmpty ? [] : cachedValue.filter(\n\t\t\tfile =>\n\t\t\t\t(!file.gulpCache$filePathChangedInsideTask || file.gulpCache$originalPath === inputFile.path)\n\t\t\t\t&& (!file.gulpCache$fileBaseChangedInsideTask || file.gulpCache$originalBase === inputFile.base)\n\t\t);\n\n\t\tif (cachedValuesWithNormalPaths.length) {\n\n\t\t\tcachedValuesWithNormalPaths.forEach((cachedFile) => {\n\t\t\t\t// Extend the cached value onto the file, but don't overwrite original path info\n\t\t\t\tconst file = new File({\n\t\t\t\t\t// custom properties\n\t\t\t\t\t...cachedFile,\n\t\t\t\t\t// file info\n\t\t\t\t\t...pick(inputFile, ['cwd', 'base', 'stat', 'history', 'path']),\n\t\t\t\t\t// file contents\n\t\t\t\t\tcontents: cachedFile.contents\n\t\t\t\t});\n\n\t\t\t\t// Restore the file path if it was set\n\t\t\t\tif (cachedFile.path && cachedFile.gulpCache$filePathChangedInsideTask) {\n\t\t\t\t\tfile.path = cachedFile.path;\n\t\t\t\t}\n\t\t\t\t// Restore the file base if it was set\n\t\t\t\tif (cachedFile.base && cachedFile.gulpCache$fileBaseChangedInsideTask) {\n\t\t\t\t\tfile.base = cachedFile.base;\n\t\t\t\t}\n\n\t\t\t\tReflect.deleteProperty(file, 'gulpCache$filePathChangedInsideTask');\n\t\t\t\tReflect.deleteProperty(file, 'gulpCache$fileBaseChangedInsideTask');\n\t\t\t\tReflect.deleteProperty(file, 'gulpCache$originalPath');\n\t\t\t\tReflect.deleteProperty(file, 'gulpCache$originalBase');\n\n\t\t\t\tsignals.emit('file', file);\n\t\t\t});\n\n\t\t\tsignals.emit('done');\n\n\t\t\tthis._removeListeners.push(() => {\n\t\t\t\t// Remove all listeners from `signals`\n\t\t\t\tsignals.removeAllListeners();\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._runProxiedTaskAndQueueCache(inputFile, cached.key, signals);\n\t}\n\n\tasync flush(next) {\n\n\t\tconst { task } = this;\n\n\t\ttry {\n\n\t\t\tif (typeof task._flush == 'function') {\n\t\t\t\ttask._flush(async (...args) => {\n\t\t\t\t\tawait this._flush();\n\t\t\t\t\tnext(...args);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait this._flush();\n\t\t\t\tnext();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t} catch (err) {\n\t\t\tnext(err);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tasync _flush() {\n\n\t\tthis._removeListeners.forEach((remove) => {\n\t\t\tremove();\n\t\t});\n\n\t\tthis._removeListeners = [];\n\n\t\tawait Promise.all(\n\t\t\tArray.from(this._cacheQueue).map(\n\t\t\t\tasync ([cachedKey, files]) =>\n\t\t\t\t\tthis._storeCachedResult(cachedKey, files)\n\t\t\t)\n\t\t);\n\n\t\tthis._cacheQueue = new Map();\n\t}\n\n\tasync removeCachedResult(file) {\n\n\t\tconst cachedKey = await this._getFileKey(file);\n\n\t\treturn this._removeCached(\n\t\t\tthis.options.name,\n\t\t\tcachedKey\n\t\t);\n\t}\n\n\tasync _getFileKey(file) {\n\n\t\tconst { key: getKey } = this.options,\n\t\t\tkey = await getKey(file);\n\n\t\treturn key ? makeHash(key) : key;\n\t}\n\n\tasync _checkForCachedValue(file) {\n\n\t\tconst key = await this._getFileKey(file);\n\n\t\t// If no key returned, bug out early\n\t\tif (!key) {\n\t\t\treturn {\n\t\t\t\tvalue: null,\n\t\t\t\tkey\n\t\t\t};\n\t\t}\n\n\t\tconst { name: cacheName, restore } = this.options;\n\n\t\tconst cached = await this._getCached(cacheName, key);\n\n\t\tif (!cached) {\n\t\t\treturn {\n\t\t\t\tvalue: null,\n\t\t\t\tkey\n\t\t\t};\n\t\t}\n\n\t\tlet parsedContents = null;\n\n\t\ttry {\n\t\t\tparsedContents = JSON.parse(cached.contents);\n\t\t} catch (err) {\n\t\t\tparsedContents = [{ cached: cached.contents }];\n\t\t}\n\n\t\tif (restore) {\n\t\t\tparsedContents = parsedContents.map(\n\t\t\t\t(parsedFile) => {\n\n\t\t\t\t\tconst restoredFile = restore(parsedFile);\n\n\t\t\t\t\t// Force restore service properties\n\t\t\t\t\trestoredFile.gulpCache$filePathChangedInsideTask = parsedFile.gulpCache$filePathChangedInsideTask;\n\t\t\t\t\trestoredFile.gulpCache$fileBaseChangedInsideTask = parsedFile.gulpCache$fileBaseChangedInsideTask;\n\t\t\t\t\trestoredFile.gulpCache$originalPath = parsedFile.gulpCache$originalPath;\n\t\t\t\t\trestoredFile.gulpCache$originalBase = parsedFile.gulpCache$originalBase;\n\n\t\t\t\t\treturn restoredFile;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: parsedContents,\n\t\t\tkey\n\t\t};\n\t}\n\n\tasync _getValueFromResult(result) {\n\n\t\tconst { value: getValue } = this.options;\n\n\t\tif (typeof getValue !== 'function') {\n\n\t\t\tif (typeof getValue === 'string') {\n\t\t\t\treturn {\n\t\t\t\t\t[getValue]: result[getValue]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn getValue;\n\t\t}\n\n\t\treturn getValue(result);\n\t}\n\n\tasync _storeCachedResult(key, result) {\n\n\t\t// If we didn't have a cachedKey, skip caching result\n\t\tif (!key) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst { options } = this;\n\n\t\tconst files = (await Promise.all(result.map(\n\t\t\tasync ({ file, meta }) => {\n\n\t\t\t\tif (options.success !== true && !(await options.success(file))) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn Object.assign(\n\t\t\t\t\tawait this._getValueFromResult(file),\n\t\t\t\t\tmeta\n\t\t\t\t);\n\t\t\t}\n\t\t))).filter(Boolean);\n\n\t\treturn this._addCached(\n\t\t\tthis.options.name,\n\t\t\tkey,\n\t\t\tJSON.stringify(files, null, whitespaces)\n\t\t);\n\t}\n\n\tasync _queueCache(file, cachedKey, originalBase, originalPath) {\n\n\t\tconst { _cacheQueue } = this;\n\n\t\tconst item = {\n\t\t\tfile: file.clone({ contents: false }),\n\t\t\tmeta: {\n\t\t\t\t// Check if the task changed the file path\n\t\t\t\tgulpCache$filePathChangedInsideTask: file.path !== originalPath,\n\t\t\t\t// Check if the task changed the base path\n\t\t\t\tgulpCache$fileBaseChangedInsideTask: file.base !== originalBase,\n\t\t\t\t// Keep track of the original path\n\t\t\t\tgulpCache$originalPath:              originalPath,\n\t\t\t\t// Keep track of the original base\n\t\t\t\tgulpCache$originalBase:              originalBase\n\t\t\t}\n\t\t};\n\n\t\tif (_cacheQueue.has(cachedKey)) {\n\t\t\t_cacheQueue.get(cachedKey).push(item);\n\t\t} else {\n\t\t\t_cacheQueue.set(cachedKey, [item]);\n\t\t}\n\t}\n\n\t_runProxiedTaskAndQueueCache(file, cachedKey, signals = new EventEmitter()) {\n\n\t\tconst originalBase = file.base,\n\t\t\toriginalPath = file.path;\n\n\t\tsignals.on('cache', (file) => {\n\t\t\tthis._queueCache(file, cachedKey, originalBase, originalPath);\n\t\t\tsignals.emit('file', file);\n\t\t});\n\n\t\treturn this._runProxiedTask(file, cachedKey, signals);\n\t}\n\n\t_runProxiedTask(file, cachedKey, signals = new EventEmitter()) {\n\n\t\tconst { task } = this,\n\t\t\thasCacheListener = Boolean(signals.listenerCount('cache'));\n\n\t\tfunction onError(err) {\n\t\t\tsignals.emit('error', err);\n\t\t}\n\n\t\tfunction onData(datum) {\n\n\t\t\tif (datum._cachedKey !== cachedKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tReflect.deleteProperty(datum, '_cachedKey');\n\n\t\t\tif (hasCacheListener) {\n\t\t\t\tsignals.emit('cache', datum);\n\t\t\t} else {\n\t\t\t\tsignals.emit('file', datum);\n\t\t\t}\n\t\t}\n\n\t\tfunction onTransformed() {\n\t\t\tsignals.emit('done');\n\t\t}\n\n\t\tthis._removeListeners.push(() => {\n\t\t\t// Be good citizens and remove our listeners\n\t\t\ttask.removeListener('error', onError);\n\t\t\ttask.removeListener('gulp-cache:transformed', onTransformed);\n\t\t\ttask.removeListener('data', onData);\n\n\t\t\t// Reduce the maxListeners back down\n\t\t\ttask.setMaxListeners(task._maxListeners - eventListenersCount);\n\n\t\t\t// Remove all listeners from `signals`\n\t\t\tsignals.removeAllListeners();\n\t\t});\n\n\t\t// Bump up max listeners to prevent memory leak warnings\n\t\tconst currMaxListeners = task._maxListeners || 0;\n\n\t\ttask.setMaxListeners(currMaxListeners + eventListenersCount);\n\n\t\ttask.on('data', onData);\n\t\ttask.once('gulp-cache:transformed', onTransformed);\n\t\ttask.once('error', onError);\n\n\t\tfile._cachedKey = cachedKey;\n\n\t\t// Run through the other task and grab output (or error)\n\t\ttask.write(file);\n\n\t\treturn signals;\n\t}\n\n\t/**\n\t * Cache promise wrappers.\n\t */\n\n\t_addCached(...args) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.options.fileCache.addCached(...args, (err, res) => {\n\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(res);\n\t\t\t});\n\t\t});\n\t}\n\n\t_getCached(...args) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.options.fileCache.getCached(...args, (err, res) => {\n\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(res);\n\t\t\t});\n\t\t});\n\t}\n\n\t_removeCached(...args) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.options.fileCache.removeCached(...args, (err) => {\n\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n}\n","import PluginError from 'plugin-error';\nimport through from 'through2';\nimport Cache from 'cache-swap';\nimport File from 'vinyl';\nimport pick from 'object.pick';\nimport { version as VERSION } from '../package.json';\nimport TaskProxy from './task-proxy';\n\nconst fileCache = new Cache({ cacheDirName: 'gulp-cache' });\n\nfunction defaultKey(file) {\n\treturn `${VERSION}${file.contents.toString('base64')}`;\n}\n\nfunction defaultRestore(restored) {\n\n\tif (restored.contents) {\n\t\t// Handle node 0.11 buffer to JSON as object with { type: 'buffer', data: [...] }\n\t\tif (restored && restored.contents && Array.isArray(restored.contents.data)) {\n\t\t\trestored.contents = new Buffer(restored.contents.data);\n\t\t} else\n\t\tif (Array.isArray(restored.contents)) {\n\t\t\trestored.contents = new Buffer(restored.contents);\n\t\t} else\n\t\tif (typeof restored.contents === 'string') {\n\t\t\trestored.contents = new Buffer(restored.contents, 'base64');\n\t\t}\n\t}\n\n\tconst restoredFile = new File(restored);\n\n\t// Restore any properties that the original task put on the file;\n\t// but omit the normal properties of the file\n\tObject.keys(restored).forEach((key) => {\n\n\t\tif (File.isCustomProp(key)) {\n\t\t\trestoredFile[key] = restored[key];\n\t\t}\n\t});\n\n\treturn restoredFile;\n}\n\nfunction defaultValue(file) {\n\n\tconst vinylProps = ['cwd', 'base', 'contents', 'stat', 'history', 'path'],\n\t\tcustomProps = Object.keys(file).filter(File.isCustomProp);\n\n\t// Convert from a File object (from vinyl) into a plain object\n\treturn pick(file, [\n\t\t...vinylProps,\n\t\t...customProps\n\t]);\n}\n\nconst defaultOptions = {\n\tfileCache,\n\tname:    'default',\n\tsuccess: true,\n\tkey:     defaultKey,\n\trestore: defaultRestore,\n\tvalue:   defaultValue\n};\n\nplugin.Cache = Cache;\nplugin.fileCache = fileCache;\nplugin.defaultOptions = defaultOptions;\n\nexport default function plugin(task, inputOptions) {\n\t// Check for required task option\n\tif (!task) {\n\t\tthrow new PluginError('gulp-cache', 'Must pass a task to cache()');\n\t}\n\n\tconst options = {\n\t\t...plugin.defaultOptions,\n\t\t...task.cacheable,\n\t\t...inputOptions\n\t};\n\n\tconst taskProxy = new TaskProxy(task, options);\n\n\tfunction each(file, enc, next) {\n\n\t\tif (file.isNull()) {\n\t\t\tnext(null, file);\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.isStream()) {\n\t\t\tnext(new PluginError('gulp-cache', 'Cannot operate on stream sources'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst signals = taskProxy.processFile(file);\n\n\t\tsignals.on('error', (err) => {\n\t\t\tnext(new PluginError('gulp-cache', err));\n\t\t});\n\n\t\tsignals.on('file', (file) => {\n\t\t\tthis.push(file);\n\t\t});\n\n\t\tsignals.on('done', () => {\n\t\t\tnext(null);\n\t\t});\n\t}\n\n\tfunction flush(next) {\n\t\ttaskProxy.flush(next);\n\t}\n\n\treturn through.obj(each, flush);\n}\n\nplugin.clear =\nfunction clear(inputOptions) {\n\n\tconst options = {\n\t\t...plugin.defaultOptions,\n\t\t...inputOptions\n\t};\n\n\tconst taskProxy = new TaskProxy(null, options);\n\n\tasync function each(file, enc, next) {\n\n\t\tif (file.isNull()) {\n\t\t\tnext(null, file);\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.isStream()) {\n\t\t\tnext(new PluginError('gulp-cache', 'Cannot operate on stream sources'));\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait taskProxy.removeCachedResult(file);\n\t\t\tnext(null, file);\n\t\t\treturn;\n\t\t} catch (err) {\n\t\t\tnext(new PluginError('gulp-cache', err));\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn through.obj(each);\n};\n\nplugin.clearAll =\nfunction clearAll() {\n\treturn new Promise((resolve, reject) => {\n\t\tfileCache.clear(null, (err) => {\n\n\t\t\tif (err) {\n\t\t\t\treject(new PluginError(\n\t\t\t\t\t'gulp-cache',\n\t\t\t\t\t`Problem clearing the cache: ${err.message}`\n\t\t\t\t));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\t});\n};\n"],"names":["whitespaces","eventListenersCount","makeHash","key","crypto","createHash","update","digest","TaskProxy","task","inputOptions","options","_cacheQueue","_removeListeners","patchTask","_transform","chunk","encoding","next","args","emit","inputFile","signals","EventEmitter","nextTick","_processFileAsync","cached","_checkForCachedValue","cachedValue","value","cachedValueIsEmpty","Array","isArray","length","cachedValuesWithNormalPaths","filter","file","gulpCache$filePathChangedInsideTask","gulpCache$originalPath","path","gulpCache$fileBaseChangedInsideTask","gulpCache$originalBase","base","forEach","cachedFile","File","pick","contents","push","removeAllListeners","_runProxiedTaskAndQueueCache","_flush","err","remove","all","map","cachedKey","files","_storeCachedResult","_getFileKey","_removeCached","name","getKey","cacheName","restore","_getCached","parsedContents","JSON","parse","parsedFile","restoredFile","result","getValue","meta","success","_getValueFromResult","Boolean","_addCached","originalBase","originalPath","item","clone","has","get","set","on","_queueCache","_runProxiedTask","hasCacheListener","listenerCount","onError","onData","datum","_cachedKey","onTransformed","removeListener","setMaxListeners","_maxListeners","currMaxListeners","once","write","resolve","reject","fileCache","addCached","res","getCached","removeCached","Cache","cacheDirName","defaultKey","VERSION","toString","defaultRestore","restored","data","Buffer","isCustomProp","defaultValue","vinylProps","customProps","defaultOptions","plugin","PluginError","cacheable","taskProxy","each","enc","isNull","isStream","processFile","flush","through","obj","clear","removeCachedResult","clearAll","message"],"mappings":"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"}